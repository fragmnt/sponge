{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Owner\\\\hacks\\\\payid\\\\sponge\\\\interface\\\\src\\\\Components\\\\auth\\\\register.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\n\nvar RegistrationForm = function RegistrationForm() {\n  _s();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(values) {\n    return console.log(values);\n  };\n\n  var handleSubmit = function handleSubmit() {// ...send to API\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: \"Required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), errors.email && errors.email.message, __jsx(\"input\", {\n    name: \"password\",\n    ref: register({\n      required: \"Required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"invalid password, try something more secure\"\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), errors.email && errors.email.message, __jsx(\"input\", {\n    name: \"username\",\n    ref: register({\n      required: \"Required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"Username must be unique and between 4-32 characters long\"\n      },\n      validate: function validate(value) {\n        return value !== \"admin\" || \"Nice try!\";\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), errors.username && errors.username.message, __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Submit\"));\n};\n\n_s(RegistrationForm, \"KjlfnGrXSec07plfDYAvor6y4og=\", false, function () {\n  return [useForm];\n});\n\n_c = RegistrationForm;\nexport default RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["C:/Users/Owner/hacks/payid/sponge/interface/src/Components/auth/register.js"],"names":["React","useForm","RegistrationForm","register","errors","onSubmit","values","console","log","handleSubmit","required","pattern","value","message","email","validate","username"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAAA,iBAECD,OAAO,EAFR;AAAA,MAEpBE,QAFoB,YAEpBA,QAFoB;AAAA,MAEVC,MAFU,YAEVA,MAFU;;AAG3B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAJ;AAAA,GAAvB;;AAEA,MAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM,CACvB;AACH,GAFD;;AAIA,SACI;AAAM,IAAA,QAAQ,EAAEA,YAAY,CAACJ,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,GAAG,EAAEF,QAAQ,CAAC;AACZO,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,0CADA;AAEPC,QAAAA,OAAO,EAAE;AAFF;AAFG,KAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAWCT,MAAM,CAACU,KAAP,IAAgBV,MAAM,CAACU,KAAP,CAAaD,OAX9B,EAaA;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,GAAG,EAAEV,QAAQ,CAAC;AACZO,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,0CADA;AAEPC,QAAAA,OAAO,EAAE;AAFF;AAFG,KAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbA,EAuBCT,MAAM,CAACU,KAAP,IAAgBV,MAAM,CAACU,KAAP,CAAaD,OAvB9B,EAyBA;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,GAAG,EAAEV,QAAQ,CAAC;AACVO,MAAAA,QAAQ,EAAE,UADA;AAEVC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,0CADA;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAFC;AAMVE,MAAAA,QAAQ,EAAE,kBAAAH,KAAK;AAAA,eAAIA,KAAK,KAAK,OAAV,IAAqB,WAAzB;AAAA;AANL,KAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBA,EAoCCR,MAAM,CAACY,QAAP,IAAmBZ,MAAM,CAACY,QAAP,CAAgBH,OApCpC,EAsCA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCA,CADJ;AA0CH,CAnDD;;GAAMX,gB;UAE0BD,O;;;KAF1BC,gB;AAqDN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst RegistrationForm = () => {\r\n\r\n    const {register, errors } = useForm(); \r\n    const onSubmit = values => console.log(values);\r\n\r\n    const handleSubmit = () => {\r\n        // ...send to API\r\n    };\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n        <input\r\n          name=\"email\"\r\n          ref={register({\r\n            required: \"Required\",\r\n            pattern: {\r\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n              message: \"invalid email address\"\r\n            }\r\n          })}\r\n        />\r\n        {errors.email && errors.email.message}\r\n\r\n        <input\r\n          name=\"password\"\r\n          ref={register({\r\n            required: \"Required\",\r\n            pattern: {\r\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n              message: \"invalid password, try something more secure\"\r\n            }\r\n          })}\r\n        />\r\n        {errors.email && errors.email.message}\r\n  \r\n        <input\r\n          name=\"username\"\r\n          ref={register({\r\n              required: \"Required\",\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"Username must be unique and between 4-32 characters long\"\r\n              },\r\n              validate: value => value !== \"admin\" || \"Nice try!\"\r\n          })}\r\n        />\r\n        {errors.username && errors.username.message}\r\n  \r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default RegistrationForm;"]},"metadata":{},"sourceType":"module"}