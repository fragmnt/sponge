{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\hacks\\\\payid\\\\sponge\\\\interface\\\\src\\\\Components\\\\auth\\\\register.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\n\nconst RegistrationForm = () => {\n  const {\n    register,\n    errors\n  } = useForm();\n\n  const onSubmit = values => console.log(values);\n\n  const handleSubmit = () => {// ...send to API\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: \"Required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), errors.email && errors.email.message, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    name: \"password\",\n    ref: register({\n      required: \"Required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"invalid password, try something more secure\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), errors.email && errors.email.message, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Your username:\"), __jsx(\"input\", {\n    name: \"username\",\n    ref: register({\n      required: \"Required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"Username must be unique and between 4-32 characters long\"\n      },\n      validate: value => value !== \"admin\" || \"Nice try!\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), errors.username && errors.username.message, __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Submit\"));\n};\n\nexport default RegistrationForm;","map":{"version":3,"sources":["C:/Users/Owner/hacks/payid/sponge/interface/src/Components/auth/register.js"],"names":["React","useForm","RegistrationForm","register","errors","onSubmit","values","console","log","handleSubmit","required","pattern","value","message","email","validate","username"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAE3B,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAsBH,OAAO,EAAnC;;AACA,QAAMI,QAAQ,GAAGC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAA3B;;AAEA,QAAMG,YAAY,GAAG,MAAM,CACvB;AACH,GAFD;;AAIA,SACI;AAAM,IAAA,QAAQ,EAAEA,YAAY,CAACJ,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFA,EAGA;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,GAAG,EAAEF,QAAQ,CAAC;AACZO,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,0CADA;AAEPC,QAAAA,OAAO,EAAE;AAFF;AAFG,KAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,EAaCT,MAAM,CAACU,KAAP,IAAgBV,MAAM,CAACU,KAAP,CAAaD,OAb9B,EAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfA,EAgBA;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,GAAG,EAAEV,QAAQ,CAAC;AACZO,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,0CADA;AAEPC,QAAAA,OAAO,EAAE;AAFF;AAFG,KAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBA,EA0BCT,MAAM,CAACU,KAAP,IAAgBV,MAAM,CAACU,KAAP,CAAaD,OA1B9B,EA4BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA5BA,EA6BA;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,GAAG,EAAEV,QAAQ,CAAC;AACVO,MAAAA,QAAQ,EAAE,UADA;AAEVC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,0CADA;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAFC;AAMVE,MAAAA,QAAQ,EAAEH,KAAK,IAAIA,KAAK,KAAK,OAAV,IAAqB;AAN9B,KAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BA,EAwCCR,MAAM,CAACY,QAAP,IAAmBZ,MAAM,CAACY,QAAP,CAAgBH,OAxCpC,EA0CA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1CA,CADJ;AA8CH,CAvDD;;AAyDA,eAAeX,gBAAf","sourcesContent":["import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst RegistrationForm = () => {\r\n\r\n    const {register, errors } = useForm(); \r\n    const onSubmit = values => console.log(values);\r\n\r\n    const handleSubmit = () => {\r\n        // ...send to API\r\n    };\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n        <label>Email</label>\r\n        <input\r\n          name=\"email\"\r\n          ref={register({\r\n            required: \"Required\",\r\n            pattern: {\r\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n              message: \"invalid email address\"\r\n            }\r\n          })}\r\n        />\r\n        {errors.email && errors.email.message}\r\n\r\n        <label>Password</label>\r\n        <input\r\n          name=\"password\"\r\n          ref={register({\r\n            required: \"Required\",\r\n            pattern: {\r\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n              message: \"invalid password, try something more secure\"\r\n            }\r\n          })}\r\n        />\r\n        {errors.email && errors.email.message}\r\n  \r\n        <label>Your username:</label>\r\n        <input\r\n          name=\"username\"\r\n          ref={register({\r\n              required: \"Required\",\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"Username must be unique and between 4-32 characters long\"\r\n              },\r\n              validate: value => value !== \"admin\" || \"Nice try!\"\r\n          })}\r\n        />\r\n        {errors.username && errors.username.message}\r\n  \r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default RegistrationForm;"]},"metadata":{},"sourceType":"module"}